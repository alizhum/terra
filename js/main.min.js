const counters = document.querySelectorAll('.counter-item');
const speed = 100;
const tabButtons = document.querySelectorAll('.tab__button');
const abroadAddress = document.querySelectorAll('.abroad__address-tag');
const abroadAddressClose = document.querySelectorAll('.abroad__address-box-close');
const faqItems = document.querySelectorAll('.faq__item-toggle');
const viewButtons = document.querySelectorAll('.view-button');
const navToggle = document.getElementById('nav-toggle');
const headerMobile = document.getElementById('header-mobile');
const submenuToggle = document.querySelectorAll('.header__nav-item-toggle');
const courseProgramToggleButtons = document.querySelectorAll('.course__program-item-header');
const filterToggle = document.querySelector('.filter-toggle');
const filterClose = document.querySelector('.filter-form__close');
const caseCatsExpand = document.querySelector('.case-cats__list-expand');
const rangeSliders = document.querySelectorAll('.range');

customSelect();

// Custom select
function customSelect() {
  const items = document.querySelectorAll('.select');

  if( !items ) return;

  items.forEach((item) => {

    const select = item.querySelector('select');
    const options = item.querySelectorAll('option');
    if( !options ) return;

    const current = document.createElement('div');
    current.classList.add('select__current');

    const ul = document.createElement('ul');
    ul.classList.add('select__list');

    options.forEach((option) => {
      
      const li = document.createElement('li');
      li.textContent = option.textContent;
      li.setAttribute('data-value', option.getAttribute('value'));
      li.classList.add('select__item');

      if( option.getAttribute('value') == select.value ) {
        li.classList.add('select__item--current');
        current.textContent = option.textContent;
      }
      
      ul.appendChild(li);

    });

    item.appendChild(current);
    item.appendChild(ul);

    select.addEventListener('change', function() {

      let value = !this.value ? '""' : this.value;
      let curr = ul.querySelector('li[data-value='+value+']');

      if( curr ) {

        ul.querySelector('.select__item--current').classList.remove('select__item--current');
        curr.classList.add('select__item--current');
        current.textContent = curr.textContent;
      }

      // Here is you can send data to the server
      // Here is you can send data to the server
      // Here is you can send data to the server
      // Here is you can send data to the server
      // Here is you can send data to the server
      // Here is you can send data to the server


    });

    current.addEventListener('click', function() {
      this.closest('.select').classList.toggle('select--active');
    });

    const listItems = ul.querySelectorAll('li');

    listItems.forEach((item) => {

      item.addEventListener('click', function() {
        
        if( this.classList.contains('select__item--current') ) return;

        ul.querySelector('.select__item--current').classList.remove('select__item--current');
        this.classList.add('select__item--current');
        select.value = this.dataset.value;
        current.textContent = this.textContent;

        current.closest('.select--active').classList.remove('select--active');

        select.dispatchEvent(new Event('change'));

      });

    });

    // Close dropdonw when clicked outside
    document.addEventListener('click', function(e) {
      
      if(!item.contains(e.target)) {
        item.classList.remove('select--active');
      }
    });


  });

}
    

//  Range slider
rangeSliders.forEach((item) => {

  const sliderTrack = item.querySelector('.range__track');
  const sliderLeft = item.querySelector('.range__input--left');
  const sliderRight = item.querySelector('.range__input--right');
  const valueLeft = item.querySelector('.range__value--left span');
  const valueRight = item.querySelector('.range__value--right span');
  let minGap = 0;
  const sliderMaxValue = sliderLeft.max;

  function updateSlider(slider, oppositeSlider, isLeft) {
      if (isLeft) {
          if (parseInt(oppositeSlider.value) - parseInt(slider.value) <= minGap) {
              slider.value = parseInt(oppositeSlider.value) - minGap;
          }
          valueLeft.textContent = slider.value;
      } else {
          if (parseInt(slider.value) - parseInt(oppositeSlider.value) <= minGap) {
              slider.value = parseInt(oppositeSlider.value) + minGap;
          }
          valueRight.textContent = slider.value;
      }
      fillColor(sliderLeft, sliderRight, sliderTrack, sliderMaxValue);
  }

  sliderLeft.addEventListener('input', function() {
      updateSlider(this, sliderRight, true);
  });

  sliderRight.addEventListener('input', function() {
      updateSlider(this, sliderLeft, false);
  });

  // Initialize the displayed values
  valueLeft.textContent = sliderLeft.value;
  valueRight.textContent = sliderRight.value;
});

function fillColor(sliderOne, sliderTwo, track, sliderMaxValue) {
  const percent1 = (sliderOne.value / sliderMaxValue) * 100;
  const percent2 = (sliderTwo.value / sliderMaxValue) * 100;
  track.style.background = `linear-gradient(to right, #dadae5 ${percent1}% , #3264fe ${percent1}% , #3264fe ${percent2}%, #dadae5 ${percent2}%)`;
}
//  Range slider


caseCatsExpand?.addEventListener('click', function() {
  
  this.closest('.case-cats__list').classList.toggle('case-cats__list--expanded');
  const buttonText = this.querySelector('span');
  const defaultText = this.getAttribute('data-default-text');
  const expandedText = this.getAttribute('data-expanded-text');
  let isExpanded = this.closest('.case-cats__list').classList.contains('case-cats__list--expanded');

  if (isExpanded) {
      buttonText.textContent = expandedText;
  } else {
      buttonText.textContent = defaultText;
  }

});

filterToggle?.addEventListener('click', function() {
    document.querySelector('.filter-form').classList.toggle('filter-form--active');
    document.body.classList.toggle('overflow-hidden');
});

filterClose?.addEventListener('click', function() {
  document.querySelector('.filter-form').classList.toggle('filter-form--active');
  document.body.classList.toggle('overflow-hidden');
});

submenuToggle.forEach((button) => {

  button.addEventListener('click', function() {

    if (window.innerWidth <= 992) {
      const navItem = button.closest('.nav__item');
      navItem.querySelector('.nav__submenu').slideToggle(300, 'flex');
      navItem.classList.toggle('nav__item--active');

    }

  });

});

window.addEventListener('resize', function() {
  if (window.innerWidth > 992) {
    closeSubMenus(); 
  }
  if (window.innerWidth > 850) {
    document.body.classList.remove('overflow-hidden');
    document.querySelector('.events__filter-form')?.classList.remove('events__filter-form--active');
  }
});

function closeSubMenus() {
  document.querySelectorAll('.nav__submenu').forEach((submenu) => {
    submenu.style.display = '';
  });
  document.querySelectorAll('.nav__item--active').forEach((navItem) => {
    navItem.classList.remove('nav__item--active')
  });
}

const openModal = document.querySelectorAll('.open-modal');
const modalClose = document.querySelectorAll('.modal__close');

if( openModal ) {

  openModal.forEach(function(button) {
    button.addEventListener('click', function(e) {
      console.log(button)
      e.preventDefault();
      const modalId = button.dataset.id;
  
      const modal = document.getElementById(modalId);

      if( modal ) {
        document.body.classList.add('overflow-hidden');
        modal.classList.add('modal--active');
      }

    });
  });

}

if( modalClose ) {

  modalClose.forEach(function(button) {
    button.addEventListener('click', function() {
      this.closest('.modal').classList.remove('modal--active');
      if( !document.querySelector('.modal--active') ) {
        document.body.classList.remove('overflow-hidden');
      }
    });
  });

}


document.addEventListener('click', function(e) {
  if(e.target.classList.contains('modal')) {
    const modalToClose = document.querySelector('.modal--active');
    if( modalToClose ) {
      modalToClose.classList.remove('modal--active');
    }
    if( !document.querySelector('.modal--active') ) {
      document.body.classList.remove('overflow-hidden');
    }
  }
});


const searchInputs = document.querySelectorAll('.search-input');
    if( searchInputs ) {

        searchInputs.forEach(function(searchInput) {

            searchInput.addEventListener( 'keyup', function(event) {

                const searchText = event.target.value.toLowerCase();
                const listClass = this.dataset.list;
                const items = document.querySelectorAll(listClass + ' li');

                for (let i = 0; i < items.length; i++) {
                    const itemText = items[i].textContent.toLowerCase();

                    if (itemText.includes(searchText)) {
                        items[i].style.display = 'block';
                    } else {
                        items[i].style.display = 'none';
                    }
                }

            });

        });



    }

    navToggle.addEventListener('click', function() {
  
      header.classList.toggle('header--nav-active');
      this.classList.toggle('header__nav-toggle--active');
      headerMobile.classList.toggle('header__bottom--active');
      document.body.classList.toggle('overflow-hidden');
      
      if( !headerMobile.classList.contains('header__nav-toggle--active') && document.body.classList.contains('overflow-hidden') ) {
        document.body.classList.remove('overflow-hidden');
      }

    
    });

counters.forEach( counter => {
   const animate = () => {
      const value = +counter.dataset.number;
      const data = +counter.innerText;
     
      const time = value / speed;
     if(data < value) {
          counter.innerText = Math.ceil(data + time);
          setTimeout(animate, 1);
        }else{
          counter.innerText = value;
        }
     
   }
   
   animate();
});

tabButtons.forEach(function(button) {

  button.addEventListener('click', function() {

    if( this.classList.contains('tab__button--active') ) return;

    const tab = this.closest('.tab');
    const contentID = this.dataset.content;
    const activeContent = tab.querySelector('.tab__content--active');
    const activeButton = tab.querySelector('.tab__button--active');
    const contentToActive = document.getElementById(contentID);
    

    if( contentToActive ) {

      activeContent.classList.remove('tab__content--active');
      activeButton.classList.remove('tab__button--active');

      this.classList.add('tab__button--active');
      contentToActive.classList.add('tab__content--active');

    }

  });
});


abroadAddress.forEach((item) => {
    
  item.addEventListener('click', function() {
    
    const parent = this.closest('.abroad__address-item');

    if( !parent.querySelector('.abroad__address-box') ) return;

    const openItems = document.querySelectorAll('.abroad__address-box--active');
    openItems.forEach((openItem) => {
      if (openItem.parentElement !== parent) {
        openItem.classList.remove('abroad__address-box--active');
        openItem.previousElementSibling.classList.remove('abroad__address-tag--active');
      }
    });

    parent.querySelector('.abroad__address-box').classList.toggle('abroad__address-box--active');
    this.classList.toggle('abroad__address-tag--active');

  });

});

abroadAddressClose.forEach((item) => {

  item.addEventListener('click', function() {

    this.closest('.abroad__address-item').querySelector('.abroad__address-tag').click();

  });

});


faqItems.forEach((item) => {
  item.addEventListener('click', function(e) {

    e.preventDefault();

    const container = this.closest('.faq');
    const otherItems = container.querySelectorAll('.faq__item--active');
    const parent = this.closest('.faq__item');
    const content = parent.querySelector('.faq__item-content');
    
    parent.classList.toggle('faq__item--active');
    parent.querySelector('.faq__item-content').slideToggle(300);

    if( otherItems ) {
      otherItems.forEach(function(elem) {
        elem.querySelector('.faq__item-content').slideToggle(300);
        elem.classList.remove('faq__item--active');
      });
    }


  });
});

courseProgramToggleButtons.forEach((item) => {

    item.addEventListener('click', function() {
      
      const container = this.closest('.course__program-items');
      const parent = this.closest('.course__program-item');
      const content = parent.querySelector('.course__program-item-content');
      
      parent.classList.toggle('course__program-item--active');
      parent.querySelector('.course__program-item-content').slideToggle(300);
  
 


    });

});

// Quiz

initializeQuiz();

function initializeQuiz() {

  const quiz = document.querySelector('.quiz__form')

  if( !quiz ) return;

  const radioButtons = quiz.querySelectorAll('input[type=radio]');
  const quizButtons = quiz.querySelectorAll('.quiz__step-button');

  createDots(quiz);


  radioButtons.forEach((radioButton) => {

    radioButton.addEventListener('change', function() {

      const currentStep = this.closest('.quiz__step');
      const nextButton = currentStep.querySelector('.quiz__step-button--next');

      const anyChecked = Array.from(radioButtons).some(button => button.checked);
      nextButton.disabled = !anyChecked;

    });
  });


  quizButtons.forEach((quizButton) => {

    quizButton.addEventListener('click', function() {

      handleQuizButtonClick(this);

    });
  });


  function handleQuizButtonClick(clickedButton) {

    
    const isNext = clickedButton.classList.contains('quiz__step-button--next') ? true : false;
    const currentStep = clickedButton.closest('.quiz__step');
    const nextStep = isNext ? currentStep.nextElementSibling : currentStep.previousElementSibling;

    if (nextStep) {
      
      currentStep.style.display = "none";
      nextStep.style.display = "flex";

      currentStep.classList.remove('quiz__step--current');
      nextStep.classList.add('quiz__step--current');

      updateDots(quiz);


    }

  }

  function createDots(quiz) {

    const dots = quiz.querySelector('.quiz__dots');
    const quizLength = quiz.querySelectorAll('.quiz__step').length;

    for(let i = 0; i < quizLength; i++) {
      
      const span = document.createElement('span');
      span.classList.add('quiz__dot');
      if (i === 0) {
        span.classList.add('quiz__dot--active');
      }
      dots.appendChild(span);

    }

  }

  function updateDots(quiz) {
    const quizSteps = quiz.querySelectorAll('.quiz__step');
    const dots = quiz.querySelector('.quiz__dots');

    const allDots = dots.querySelectorAll('.quiz__dot');
    allDots.forEach(dot => {
        dot.classList.remove('quiz__dot--active');
    });

    let foundCurrentStep = false; // Флаг для определения текущего шага

    for (let i = 0; i < quizSteps.length; i++) {
        const step = quizSteps[i];
        const dot = dots.children[i];

        // Если текущий шаг найден, устанавливаем активность для всех точек до текущего шага
        if (step.classList.contains('quiz__step--current')) {
            foundCurrentStep = true;
            dot.classList.add('quiz__dot--active');
        } else if (!foundCurrentStep) {
            dot.classList.add('quiz__dot--active');
        }
    }
}


}

// Sliders 

const introSlider = new Swiper('.intro__slider', {
  slidesPerView: 'auto',
  spaceBetween: 20,
});


const projectsSlider = new Swiper('.projects__slider', {
  slidesPerView: 'auto',
  spaceBetween: 20,
  watchOverflow: true,
  navigation: {
    prevEl: '.projects__nav-button--prev',
    nextEl: '.projects__nav-button--next'
  }
});

const storiesSlider = new Swiper('.stories__slider', {
  slidesPerView: 'auto',
  spaceBetween: 20,
  navigation: {
    prevEl: '.stories__nav-button--prev',
    nextEl: '.stories__nav-button--next'
  },
  breakpoints: {
    576: {
      slidesPerView: 2,
      spaceBetween: 20
    },
    800: {
      slidesPerView: 3,
      spaceBetween: 20
    },
    1170: {
      slidesPerView: 4,
      spaceBetween: 40
    }
  }
});
 

let eventsSlider = initSwiper('.events__slider', {
  slidesPerView: 'auto',
  spaceBetween: 30,
  watchOverflow: true,
  navigation: {
    prevEl: '.events__nav-button--prev',
    nextEl: '.events__nav-button--next'
  },
});

const gallerySlider = new Swiper('.gallery__slider', {
  spaceBetween: 1,
  slidesPerView: 1,
  centeredSlides: true,
  roundLengths: true,
  initialSlide: 1,
  loopAdditionalSlides: 30,
  navigation: {
    prevEl: '.gallery__nav-button--prev',
    nextEl: '.gallery__nav-button--next'
  },
});

const teamSlider = new Swiper('.team__slider', {
  slidesPerView: 'auto',
  spaceBetween: 22,
  navigation: {
    prevEl: '.team__nav-button--prev',
    nextEl: '.team__nav-button--next'
  },
  scrollbar: {
    el: ".team__scrollbar",
  },
  breakpoints: {
    850: {
      slidesPerView: 3,
    },
    1170: {
      slidesPerView: 4,
    }
  }
});

const ecoSystemSlider = new Swiper('.ecosystem__slider', {
  slidesPerView: 'auto',
  spaceBetween: 22,

  breakpoints: {
    850: {
      slidesPerView: 3,
    },
    992: {
      slidesPerView: 4,
    },
    1200: {
      slidesPerView: 5,
    }
  }
});

const contactsSlider = new Swiper('.contacts__slider', {
  spaceBetween: 15,
  slidesPerView: 1,
  loopAdditionalSlides: 30,
  pagination: {
    el: '.contacts__slider-pagination',
    clickable: true
  }
});

const reviewsSlider = new Swiper('.reviews__slider', {
  slidesPerView: 1,
  spaceBetween: 40,
  navigation: {
    prevEl: '.reviews__nav-button--prev',
    nextEl: '.reviews__nav-button--next'
  },
  breakpoints: {
    1366: {
      slidesPerView: 2,
    }
  },
});


const testimonialsSlider = new Swiper('.testimonials__slider', {
  slidesPerView: 'auto',
  spaceBetween: 30,
});

if (viewButtons) {
  viewButtons.forEach((button) => {
    button.addEventListener('click', function() {
      if (this.classList.contains('view-button--active')) return;
      
      const parent = this.closest('.section');
      parent.querySelector('.view-button--active').classList.remove('view-button--active');
      this.classList.add('view-button--active');

      let direction = this.dataset.type;
      
      if( this.hasAttribute('data-container-class') ) {

        let containerClass = this.dataset.containerClass;
        let containerDir = containerClass + '--' + direction;
        const container = document.querySelector('.'+containerClass);

        container.classList.forEach(className => {
          if (className.startsWith(containerClass + '--')) {
            container.classList.remove(className);
          }
        });
        container.classList.add(containerDir);

      }

      if( this.classList.contains('events__view-button') ) {
        changeEventsSliderDirection(direction);
      }
      
    });
  });
}

function changeEventsSliderDirection(direction) {
  
  if (direction == 'horizontal') {
    initSwiper('.events__slider', {
      slidesPerView: 'auto',
      spaceBetween: 30,
      watchOverflow: true,
      navigation: {
        prevEl: '.events__nav-button--prev',
        nextEl: '.events__nav-button--next'
      },
    }, 'events__slider--destroyed');

  } else {

    destroySwiper('.events__slider', 'events__slider--destroyed');
    
  }

}


function destroySwiper(selectorOrSwiper, destroyedClass = '') {
  let slider;
  if (typeof selectorOrSwiper === 'string') {
    slider = document.querySelector(selectorOrSwiper);
  } else {
    slider = selectorOrSwiper;
  }

  if (slider !== null) {
    const swiperInstance = slider.swiper;
    if (swiperInstance) {
      swiperInstance.destroy(); // Уничтожить Swiper, если он существует
      if( destroyedClass ) {
        document.querySelector(selectorOrSwiper).classList.add(destroyedClass)
      }

    }
  }
}

// Функция для инициализации слайдера
function initSwiper(className, options, destroyedClass = '') {

  if( destroyedClass ) {
    document.querySelector(className).classList.remove(destroyedClass)
  }

  return new Swiper(className, options);
  

}

// Slide Toggle Vanilla JS
HTMLElement.prototype.slideToggle = function(duration, displayType) {
  if (this.clientHeight === 0) {
    _s(this, duration, true, displayType);
  } else {
    _s(this, duration, false, displayType);
  }
};

function _s(el, duration, isDown, displayType) {
  
  if (typeof duration === 'undefined') duration = 400;
  if (typeof isDown === 'undefined') isDown = false;
  if (typeof displayType === 'undefined') displayType = 'block';

  el.style.overflow = "hidden";
  if (isDown) el.style.display = displayType;

  var elStyles        = window.getComputedStyle(el);

  var elHeight        = parseFloat(elStyles.getPropertyValue('height'));
  var elPaddingTop    = parseFloat(elStyles.getPropertyValue('padding-top'));
  var elPaddingBottom = parseFloat(elStyles.getPropertyValue('padding-bottom'));
  var elMarginTop     = parseFloat(elStyles.getPropertyValue('margin-top'));
  var elMarginBottom  = parseFloat(elStyles.getPropertyValue('margin-bottom'));

  var stepHeight        = elHeight        / duration;
  var stepPaddingTop    = elPaddingTop    / duration;
  var stepPaddingBottom = elPaddingBottom / duration;
  var stepMarginTop     = elMarginTop     / duration;
  var stepMarginBottom  = elMarginBottom  / duration;

  var start;

  function step(timestamp) {

    if (start === undefined) start = timestamp;

    var elapsed = timestamp - start;

    if (isDown) {
      el.style.height        = (stepHeight        * elapsed) + "px";
      el.style.paddingTop    = (stepPaddingTop    * elapsed) + "px";
      el.style.paddingBottom = (stepPaddingBottom * elapsed) + "px";
      el.style.marginTop     = (stepMarginTop     * elapsed) + "px";
      el.style.marginBottom  = (stepMarginBottom  * elapsed) + "px";
    } else {
      el.style.height        = elHeight        - (stepHeight        * elapsed) + "px";
      el.style.paddingTop    = elPaddingTop    - (stepPaddingTop    * elapsed) + "px";
      el.style.paddingBottom = elPaddingBottom - (stepPaddingBottom * elapsed) + "px";
      el.style.marginTop     = elMarginTop     - (stepMarginTop     * elapsed) + "px";
      el.style.marginBottom  = elMarginBottom  - (stepMarginBottom  * elapsed) + "px";
    }

    if (elapsed >= duration) {
      el.style.height        = "";
      el.style.paddingTop    = "";
      el.style.paddingBottom = "";
      el.style.marginTop     = "";
      el.style.marginBottom  = "";
      el.style.overflow      = "";
      if (!isDown) el.style.display = "none";
    } else {
      window.requestAnimationFrame(step);
    }
  }

  window.requestAnimationFrame(step);
}
